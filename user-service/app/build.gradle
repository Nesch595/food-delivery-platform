/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.1.0/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.5.7'
}
apply plugin: 'io.spring.dependency-management'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava
    // 'junit-jupiter-api' is for writing tests.
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    // 'junit-jupiter-engine' is for running the tests on the JUnit Platform.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //Open API
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'
    //Lombok
    implementation 'org.projectlombok:lombok:1.18.42'
    annotationProcessor 'org.projectlombok:lombok:1.18.42'
    //Mapstruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    //Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    //Liquibase
    implementation 'org.liquibase:liquibase-core'
    //PostgreSQL driver
    implementation 'org.postgresql:postgresql:42.7.8'
}

test {
    useJUnitPlatform()
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
